models:
  - name: fact_trips
    description: >
      Trip made by green taxis, also known as boro taxis and street-hail liveries.
      Green taxis may respond to street hails, but only in the areas indicated in green on the 
      map.
      The records are collected and provided to the NYC Taxi and Limousine Commision (TLC) by
      technology service providers.
    columns:
      - name: tripid
        description: Primary key for this table, generated with concaternation of vendorid-pidckup_datetime
        tests:
          - unique:
              severity: warn
          - not_null:
              severity: warn
      - name: vendorid
        description: >
          A code indicating the providers that provided the record.
          1= Creative Mobile Technologies, LLC; 
          2= VeriFone Inc.
      - name: pickup_datetime
        description: The date and time when the meter was engaged. 
      - name: dropoff_datetime
        description: The date and time when the meter was disengaged. 
      - name: Passenger_count
        description: The number of passengers in the vehicle. This is a driver-entered value.
      - name: Trip_distance
        description: The elapsed trip distance in miles reported by the taximeter.
      - name: pickup_locationid
        description: TLC Taxi Zone in which the taximeter was engaged
        tests:
          - relationships:
              field: locationid
              to: ref('dim_zones')
              severity: warn
      - name: dropoff_locationid
        description: TLC Taxi Zone in which the taximeter was disengaged
        tests:
          - relationships:
              field: locationid
              to: ref('dim_zones')
              severity: warn
      - name: RatecodeID
        description: >
          The final rate code in effect at the end of the trip.
          1= Standard rate
          2=JFK
          3=Newark
          4=Nassau or Westchester
          5=Negotiated fare
          6=Group ride
      - name: Store_and_fwd_flag
        description: >
          This flag indicates whether the trip record was held in vehicle 
          memory before sending to the vendor, aka “store and forward,” 
          because the vehicle did not have a connection to the server.
      - name: Payment_type
        description: >
          A numeric code signifying how the passenger paid for the trip. 
          1= Credit card
          2= Cash
          3= No charge
          4= Dispute
          5= Unknown
          6= Voided trip
        tests:
          - accepted_values:
              values: "{{ var('payment_type_values') }}"
              severity: warn
              quote: false
      - name: Payment_type_description
        description: Description of the payment_type code.
      - name: Fare_amount
        description: The time-and-distance fare calculated by the meter.
      - name: Extra
        description: >
          Miscellaneous extras and surcharges. Currently, this only includes 
          the $0.50 and $1 rush hour and overnight charges.
      - name: MTA_tax
        description: $0.50 MTA tax that is automatically triggered based on the metered rate in use.
      - name: Improvement_surcharge
        description: >
          $0.30 improvement surcharge assessed on hailed trips at the flag drop. 
          The improvement surcharge began being levied in 2015.
      - name: Tip_amount
        description: >
          Tip amount - This field is automatically populated for credit card tips. 
          Cash tips are not included.
      - name: Tolls_amount
        description: Total amount of all tolls paid in trip. 
      - name: Total_amount
        description: The total amount charged to passengers. Does not include cash tips.
      - name: Trip_type
        description: >
          A code indicating whether the trip was a street-hail or a dispatch
          that is automatically assigned based on the metered rate in use but 
          can be altered by the driver.
          1= Street-hail
          2= Dispatch


semantic_models:
  - name: average_distance
    description: "The average trip distance"
    model: ref('fact_trips')
    
    entities:
      - name: fact_trip
        expr: tripid
        type: primary

    defaults:
      agg_time_dimension: avg_pickup_datetime
    
    dimensions:
      - name: pickup_borough
        type: categorical
      - name: dropoff_borough
        type: categorical
      - name: avg_pickup_datetime
        type: time
        expr: cast(pickup_datetime as DATETIME)
        type_params:
          time_granularity: day
      # - name: avg_pickup_month
      #   type: time
      #   expr: date_trunc(pickup_datetime, month)
      #   type_params:
      #     time_granularity: month
      # - name: avg_pickup_quarter
      #   type: time
      #   expr: date_trunc(pickup_datetime, quarter)
      #   type_params:
      #     time_granularity: quarter
      # - name: avg_pickup_yearly
      #   type: time
      #   expr: date_trunc(pickup_datetime, year)
      #   type_params:
      #     time_granularity: year
    
    measures:
      - name: avg_trip_distance
        description: Average trip distance.
        expr: trip_distance
        agg: average
        # agg_time_dimension: avg_pickup_datetime

metrics:
  - name: avg_trip_distance
    description: Average of trip distance.
    type: simple
    label: Avg trip distance
    type_params:
      measure: avg_trip_distance
    filter: | # For any metric you can optionally include a filter on dimension values
        {{Dimension('fact_trip__pickup_borough')}} = 'Manhattan' AND
        {{Dimension('fact_trip__dropoff_borough')}} = 'Manhattan'
      
  # - name: cumulative_trip_distance
  #   description: The cumulative trip distance.
  #   label: Cumulative Trip Distance
  #   type: cumulative
  #   type_params:
  #     measure: avg_trip_distance
    # window: The accumulation window, such as 1 month, 7 days, 1 year. # Optional. Can not be used with window. 
    # Sets the accumulation grain, such as month will accumulate data for one month, then restart at the beginning of the next.  # Optional. Cannot be used with grain_to_date
      # grain_to_date: [month, quarter]

#     tags:
#     - piperider